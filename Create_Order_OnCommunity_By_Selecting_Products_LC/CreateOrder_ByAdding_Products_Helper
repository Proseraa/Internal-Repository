({
    //get Industry Picklist Value
    getStatusPicklist: function(component, event) {
        var action = component.get("c.getStatus");
        action.setCallback(this, function(response) {
            var state = response.getState();
            if (state === "SUCCESS") {
                var result = response.getReturnValue();
                var StatusMap = [];
                for (var key in result) {
                    StatusMap.push({
                        key: key,
                        value: result[key]
                    });
                }
                component.set("v.StatusMap", StatusMap);
            }
        });
        $A.enqueueAction(action);
    },

    //get Currency Picklist Value
    getCurrencyPicklist: function(component, event) {
        var action = component.get("c.getCurrency");
        action.setCallback(this, function(response) {
            var state = response.getState();
            if (state === "SUCCESS") {
                var result = response.getReturnValue();
                var CurrencyMap = [];
                for (var key in result) {
                    CurrencyMap.push({
                        key: key,
                        value: result[key]
                    });
                }
                component.set("v.CurrencyMap", CurrencyMap);
            }
        });
        $A.enqueueAction(action);
    },

    //handle order Save
    saveOrder: function(component, event) {
        var action = component.get("c.SaveOrder");
        var objord = component.get("v.ord"); 
        var toastEvent = $A.get("e.force:showToast");
        if (objord.Status == '' || objord.Status == 'undefined') {
            toastEvent.setParams({
                title: 'Error',
                message: 'Status Should Not Be Null',
                duration: ' 5000',
                key: 'info_alt',
                type: 'error',
                mode: 'pester'
            });
            toastEvent.fire();
            return;
        }
        if (objord.EffectiveDate == null || objord.EffectiveDate == 'undefined') {
            toastEvent.setParams({
                title: 'Error',
                message: 'Start Date Should Not Be Null',
                duration: ' 5000',
                key: 'info_alt',
                type: 'error',
                mode: 'pester'
            });
            toastEvent.fire();
            return;
        }
         
        action.setParams({
            objord: objord,
            acId: component.get("v.acId")
        });
        action.setCallback(this, function(response) {
            var state = response.getState();
           
            if (state === "SUCCESS") {
                var res = response.getReturnValue();
                if (res.includes('Order Creation Failed')) {
                    component.set("v.boolean", false);
                    toastEvent.setParams({
                        title: 'Error',
                        message: res,
                        duration: ' 5000',
                        key: 'info_alt',
                        type: 'error',
                        mode: 'pester'
                    });
                    toastEvent.fire();
                    return;
                } else {
                    component.set("v.orderid", res);
                    component.set("v.boolean", true);
                    component.set("v.boolean1", false);
                    component.set("v.boolean3", false);
                    component.set("v.boolean4", true);
                }
            }

        });
        $A.enqueueAction(action);
    },

    //handle order Save
    saveOrderitem: function(component, event) {
        var action = component.get("c.insertorderitems");
        var olilist = component.get("v.OrderItemListWrapper");
        var getorder = component.get("v.orderid");
        action.setParams({
            orderid: getorder,
            orderItemList: olilist
        });
        action.setCallback(this, function(response) {
            var state = response.getState();
            var toastEvent = $A.get("e.force:showToast");
            if (state === "SUCCESS") {
                var res = response.getReturnValue();
                if (res.includes('Quantity Should Not Be Null/0') || res.includes('UnitPrice Should Not Be Null')) {
                    toastEvent.setParams({
                        title: 'Error',
                        message: res,
                        duration: ' 1000',
                        key: 'info_alt',
                        type: 'error',
                        mode: 'pester'
                    });
                } else if (res.includes('Saved Successfully')) {
                    component.set("v.boolean2", true);
                    component.set("v.boolean1", false);
                    component.set("v.boolean", false);
                    component.set("v.boolean3", false);
                    component.set("v.boolean4", false);

                    toastEvent.setParams({
                        type: 'success',
                        title: 'Success',
                        message: res,
                        mode: 'pester',
                        key: 'info_alt',
                        duration: ' 1000',
                    });
                   
                }
            } else {
                var res = response.getReturnValue();
                if (res == null) {

                }
            }
            toastEvent.fire();
        });

        $A.enqueueAction(action);
    },
})